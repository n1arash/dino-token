{"version":3,"sources":["assets/image.jpg","utils.js","Transfer.jsx","assets/logo.svg","Header.jsx","Footer.jsx","App.jsx","reportWebVitals.js","index.js","config.js"],"names":["nearConfig","getConfig","process","initContract","a","connect","Object","assign","deps","keyStore","keyStores","BrowserLocalStorageKeyStore","near","walletConnection","WalletConnection","accountId","getAccountId","Contract","account","contractName","viewMethods","changeMethods","contract","ONE_YOCTO_NEAR","BOATLOAD_OF_GAS","Big","times","toFixed","TransferPage","React","nearAddress","setNearAddress","amount","setAmount","userBalance","setUserBalance","storageBalance","setStorageBalance","depositStorage","to","storage_deposit","account_id","add","send_tokens","receiver_id","buyDino","buy_tokens","e","preventDefault","getStorageDeposit","storage_balance_of","storage","getBalance","ft_balance_of","balance","console","log","className","onSubmit","transferDino","htmlFor","onChange","target","value","name","type","placeholder","Header","login","logout","isSignedIn","childern","onClick","src","logo","width","height","alt","href","Footer","App","useState","setInitContract","setIsSignedIn","signOut","window","location","replace","origin","pathname","requestSignIn","useEffect","init","style","textAlign","meme","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","CONTRACT_NAME","module","exports","env","networkId","nodeUrl","walletUrl","helperUrl","explorerUrl","keyPath","HOME","masterAccount","Error"],"mappings":"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","file":"static/js/main.1414c4e2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/image.12c479f9.jpg\";","import { connect, Contract, keyStores, WalletConnection } from 'near-api-js'\nimport getConfig from './config'\nimport Big from 'big.js'\nexport const nearConfig = getConfig(process.env.NODE_ENV || 'development')\n\n// Initialize contract & set global variables\nexport async function initContract() {\n  // Initialize connection to the NEAR testnet\n  const near = await connect(Object.assign({ deps: { keyStore: new keyStores.BrowserLocalStorageKeyStore() } }, nearConfig))\n\n  // Initializing Wallet based Account. It can work with NEAR testnet wallet that\n  // is hosted at https://wallet.testnet.near.org\n  const walletConnection = new WalletConnection(near)\n\n  // Getting the Account ID. If still unauthorized, it's just empty string\n  const accountId = walletConnection.getAccountId()\n\n  // Initializing our contract APIs by contract name and configuration\n  const contract = await new Contract(walletConnection.account(), nearConfig.contractName, {\n    // View methods are read only. They don't modify the state, but usually return some value.\n    viewMethods: ['ft_balance_of', 'storage_balance_of'],\n    // Change methods can modify the state. But you don't receive the returned value when called.\n    changeMethods: ['storage_deposit', 'buy_tokens', 'send_tokens'],\n  })\n  return { accountId, contract, walletConnection }\n}\n\nexport function logout() {\n  window.walletConnection.signOut()\n  // reload page\n  window.location.replace(window.location.origin + window.location.pathname)\n}\n\nexport function login() {\n  // Allow the current app to make calls to the specified contract on the\n  // user's behalf.\n  // This works by creating a new access key for the user's account and storing\n  // the private key in localStorage.\n  window.walletConnection.requestSignIn(nearConfig.contractName)\n  window.contract.storage_deposit({\n    \n  },'0.00125')\n\n}\n\nexport const ONE_YOCTO_NEAR = \"1\";\nexport const BOATLOAD_OF_GAS = Big(3).times(10 ** 13).toFixed();\nexport const ONE_NEAR = Big(1).times(10 ** 24).toFixed();","import * as React from \"react\";\nimport { BOATLOAD_OF_GAS, ONE_YOCTO_NEAR } from \"./utils\";\nimport Big from \"big.js\";\n\nexport default function TransferPage({ accountId, contract }) {\n  const [nearAddress, setNearAddress] = React.useState(\"\");\n  const [amount, setAmount] = React.useState(0);\n  const [userBalance, setUserBalance] = React.useState(0);\n  const [storageBalance, setStorageBalance] = React.useState(null);\n  React.useEffect(() => {\n    const getStorageDeposit = async () => {\n      const storage = await contract.storage_balance_of({\n        account_id: accountId,\n      });\n      setStorageBalance(storage);\n    };\n    const getBalance = async () => {\n      const balance = await contract.ft_balance_of({\n        account_id: accountId,\n      });\n      setUserBalance(balance);\n    };\n    console.log(contract);\n    getBalance();\n    getStorageDeposit();\n  }, [accountId, setUserBalance, contract]);\n\n  async function depositStorage(to) {\n    if (storageBalance == null) {\n      await contract.storage_deposit(\n        { account_id: to },\n        \"200000000000000\",\n        Big(0.00125)\n          .times(10 ** 24)\n          .add(ONE_YOCTO_NEAR)\n          .toFixed()\n      );\n    }\n  }\n  async function transferDino(to, amount) {\n    if (storageBalance == null) {\n      await depositStorage(to);\n    } else {\n      await contract.send_tokens(\n        {\n          receiver_id: to,\n          amount,\n        },\n        \"200000000000000\",\n        Big(0.00125)\n          .times(10 ** 24)\n          .add(ONE_YOCTO_NEAR)\n          .toFixed()\n      );\n    }\n  }\n\n  function onSubmit(e) {\n    e.preventDefault();\n    transferDino(nearAddress, amount);\n  }\n\n  async function buyDino(to) {\n    if (storageBalance == null) {\n      await depositStorage(to);\n    } else {\n      await contract.buy_tokens(\n        {\n          account_id: accountId,\n          amount: amount,\n        },\n        BOATLOAD_OF_GAS,\n        ONE_YOCTO_NEAR\n      );\n    }\n  }\n  async function onBuySubmit(e) {\n    e.preventDefault();\n    await buyDino(accountId);\n  }\n\n  function onAddressChange(e) {\n    setNearAddress(e.target.value);\n  }\n\n  function onAmountChange(e) {\n    setAmount(e.target.value);\n  }\n\n  return (\n    <main className=\"container transfer-main\">\n      <div className=\"transfer-card\">\n        <h1>Transfer Dino Token</h1>\n        <h5>Balance: {userBalance} DINO</h5>\n        <form onSubmit={onSubmit} className=\"transfer-form\">\n          <div className=\"row\">\n            <label htmlFor=\"exampleEmailInput\">\n              Near wallet address (example: you.near){\" \"}\n            </label>\n            <input\n              onChange={onAddressChange}\n              className=\"u-full-width\"\n              name=\"amount\"\n              type=\"text\"\n              placeholder=\"you.near\"\n            />\n          </div>\n          <div className=\"row\">\n            <label htmlFor=\"exampleEmailInput\">DINO Transfer Amount:</label>\n            <input\n              onChange={onAmountChange}\n              className=\"u-full-width\"\n              name=\"amount\"\n              type=\"number\"\n              placeholder=\"100\"\n            />\n          </div>\n          <br />\n          <div className=\"row center-row\">\n            <input className=\"button-primary\" type=\"submit\" value=\"Transfer\" />\n          </div>\n        </form>\n      </div>\n      <div className=\"transfer-card\">\n        <h5>Get 100 FREE Dino with Portion of NEAR</h5>\n        <p>\n          If it's first transaction on you have to do Storage Deposit for DINO\n          Token, so try again when you got back from storage deposit\n          transaction.\n        </p>\n        <form onSubmit={onBuySubmit} className=\"transfer-form\">\n          <div className=\"row center-row\">\n            <input className=\"button-primary\" type=\"submit\" value=\"GIMMEEEE!\" />\n          </div>\n        </form>\n      </div>\n    </main>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/logo.6c4f4048.svg\";","import * as React from \"react\";\nimport logo from \"./assets/logo.svg\";\n\nexport default function Header({\n  login,\n  logout,\n  accountId,\n  isSignedIn,\n  childern,\n}) {\n  return (\n    <>\n      <header className=\"header\">\n        <div className=\"center-row row\">\n          <div className=\"three columns\">\n            {isSignedIn ? (\n              <button className=\"button button-primary\" onClick={logout}>\n                Logout\n              </button>\n            ) : (\n              <button className=\"button\" onClick={login}>\n                Login\n              </button>\n            )}\n          </div>\n\n          <div className=\"six columns\">\n            <div className=\"center-column\">\n              <img\n                src={logo}\n                width=\"64px\"\n                height=\"64px\"\n                alt=\"Kiwi standing on oval\"\n              />\n            </div>\n          </div>\n          <div className=\"three columns\">\n            <h4>\n              <a\n                target=\"_blank\"\n                href={`https://explorer.testnet.near.org/accounts/${accountId}`}\n              >\n                {accountId}\n              </a>\n            </h4>\n          </div>\n        </div>\n      </header>\n\n      {childern}\n    </>\n  );\n}\n","import * as React from \"react\";\n\nexport default function Footer() {\n  return (\n    <div className=\"footer\">\n      <p>All Rights Reserver Blue Dino Meme </p>\n    </div>\n  );\n}\n","import \"regenerator-runtime/runtime\";\nimport React from \"react\";\nimport \"./App.css\";\nimport \"./index.css\";\nimport meme from \"./assets/image.jpg\";\nimport getConfig from \"./config\";\nimport { initContract } from \"./utils\";\nimport TransferPage from \"./Transfer\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nconst { contractName } = getConfig(process.env.NODE_ENV || \"development\");\n\nexport default function App() {\n  const [{ accountId, contract, walletConnection }, setInitContract] =\n    React.useState({});\n  const [isSignedIn, setIsSignedIn] = React.useState(false);\n  React.useEffect(() => {\n    async function init() {\n      const { accountId, contract, walletConnection } = await initContract();\n      setInitContract({ accountId, contract, walletConnection });\n      setIsSignedIn(walletConnection.isSignedIn());\n    }\n    init();\n  }, [setInitContract, setIsSignedIn]);\n\n  function logout() {\n    walletConnection.signOut();\n    // reload page\n    window.location.replace(window.location.origin + window.location.pathname);\n  }\n\n  function login() {\n    walletConnection.requestSignIn(contractName);\n  }\n\n  // if not signed in, return early with sign-in prompt\n  if (!isSignedIn) {\n    return (\n      <>\n        <Header\n          isSignedIn={isSignedIn}\n          logout={logout}\n          login={login}\n          accountId={accountId}\n        />\n        <main>\n          <div className=\"jumbotron\">\n            <div className=\"container\">\n              <div className=\"row\">\n                <h1 className=\"jumbotron-head\" style={{ textAlign: \"center\" }}>\n                  Blue Dino Token\n                </h1>\n                <p className=\"jumbotron-text\"></p>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"container\">\n            <div className=\"row center-column\">\n              <h2>What is a meme Token?</h2>\n              <p>\n                A meme coin is a cryptocurrency that originated from an Internet\n                meme or has some other humorous characteristic. The term is\n                often dismissive, comparing the value or performances of those\n                cryptocurrencies to that of mainstream ones.\n              </p>\n              <div className=\"center-column\">\n                <p>Login to Transfer your Blue Dino Token</p>\n                <button className=\"button button-primary\" onClick={login}>\n                  Login\n                </button>\n              </div>\n              <div className=\"center-column\">\n                <img src={meme} alt=\"blue dino land token\" />\n              </div>\n            </div>\n          </div>\n        </main>\n        <Footer />\n      </>\n    );\n  }\n  return (\n    <>\n      <Header\n        isSignedIn={isSignedIn}\n        logout={logout}\n        login={login}\n        accountId={accountId}\n      />\n      <TransferPage contract={contract} accountId={accountId} />\n      <Footer />\n    </>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","const CONTRACT_NAME = 'dino2.barbaz.testnet'\n\nfunction getConfig(env) {\n  switch (env) {\n\n  case 'production':\n    return {\n      networkId: 'testnet',\n      nodeUrl: 'https://rpc.testnet.near.org',\n      contractName: CONTRACT_NAME,\n      walletUrl: 'https://wallet.testnet.near.org',\n      helperUrl: 'https://helper.testnet.near.org',\n      explorerUrl: 'https://explorer.testnet.near.org',\n    }\n  case 'development':\n  case 'testnet':\n    return {\n      networkId: 'testnet',\n      nodeUrl: 'https://rpc.testnet.near.org',\n      contractName: CONTRACT_NAME,\n      walletUrl: 'https://wallet.testnet.near.org',\n      helperUrl: 'https://helper.testnet.near.org',\n      explorerUrl: 'https://explorer.testnet.near.org',\n    }\n  case 'betanet':\n    return {\n      networkId: 'betanet',\n      nodeUrl: 'https://rpc.betanet.near.org',\n      contractName: CONTRACT_NAME,\n      walletUrl: 'https://wallet.betanet.near.org',\n      helperUrl: 'https://helper.betanet.near.org',\n      explorerUrl: 'https://explorer.betanet.near.org',\n    }\n  case 'local':\n    return {\n      networkId: 'local',\n      nodeUrl: 'http://localhost:3030',\n      keyPath: `${process.env.HOME}/.near/validator_key.json`,\n      walletUrl: 'http://localhost:4000/wallet',\n      contractName: CONTRACT_NAME,\n    }\n  case 'test':\n  case 'ci':\n    return {\n      networkId: 'shared-test',\n      nodeUrl: 'https://rpc.ci-testnet.near.org',\n      contractName: CONTRACT_NAME,\n      masterAccount: 'test.near',\n    }\n  case 'ci-betanet':\n    return {\n      networkId: 'shared-test-staging',\n      nodeUrl: 'https://rpc.ci-betanet.near.org',\n      contractName: CONTRACT_NAME,\n      masterAccount: 'test.near',\n    }\n  default:\n    throw Error(`Unconfigured environment '${env}'. Can be configured in src/config.js.`)\n  }\n}\n\nmodule.exports = getConfig\n"],"sourceRoot":""}